{"version":3,"sources":["webpack:///webpack/bootstrap 6fa4e94aac2e0db90d11","webpack:///./node_modules/rythmoos-engine/build/lib/index.js","webpack:///./node_modules/rythmoos-engine/build/lib/Map.js","webpack:///./node_modules/rythmoos-engine/build/lib/Renderer.js","webpack:///./node_modules/rythmoos-engine/build/lib/Scene.js","webpack:///./node_modules/rythmoos-engine/build/lib/Loop.js","webpack:///./node_modules/rythmoos-engine/build/lib/Time.js","webpack:///./node_modules/rythmoos-engine/build/lib/Mouse.js","webpack:///./node_modules/rythmoos-engine/build/lib/Keyboard.js","webpack:///./node_modules/rythmoos-engine/build/lib/Screen.js","webpack:///./node_modules/rythmoos-engine/build/lib/Loader.js","webpack:///./node_modules/rythmoos-engine/build/lib/State.js","webpack:///./src/index.js","webpack:///./node_modules/rythmoos-engine/build/lib/Game.js","webpack:///./node_modules/rythmoos-engine/build/lib/GameObject.js","webpack:///./node_modules/rythmoos-engine/build/lib/Keys.js","webpack:///./src/MainScene.js","webpack:///./src/Circle.js","webpack:///./src/Score.js","webpack:///./src/FPSCounter.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;AClBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+B;;;;;;;ACpEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;AC1BA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;AC9DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;ACpCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;ACtDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;AC1PA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;ACrEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;AChFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;AC5KA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;;;;;ACrCoB;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;AC5EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;AClCA;AACA,8CAA8C,cAAcgC;;;;;;;;;;;;AC3Gc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;AChByC;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;AC1EkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,oEAAmB;AAClD;;AAEA;AAAA;AAAA;;;;;;;;;;ACvByB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,sEAAqB;AAClD;;AAEA;AAAA;AAAA","file":"my-awesome-game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fa4e94aac2e0db90d11","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./Game\"));\r\n__export(require(\"./GameObject\"));\r\n__export(require(\"./Keyboard\"));\r\n__export(require(\"./Keys\"));\r\n__export(require(\"./Loader\"));\r\n__export(require(\"./Loop\"));\r\n__export(require(\"./Map\"));\r\n__export(require(\"./Mouse\"));\r\n__export(require(\"./Renderer\"));\r\n__export(require(\"./Scene\"));\r\n__export(require(\"./Screen\"));\r\n__export(require(\"./State\"));\r\n__export(require(\"./Time\"));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/index.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A collection with a non-indexed key.<br>\r\n * Useful to store a set of objects of the same type.\r\n */\r\nvar Map = /** @class */ (function () {\r\n    function Map() {\r\n        this._keys = [];\r\n        this._values = [];\r\n    }\r\n    /**\r\n     * Get an object from the map.\r\n     * @param key The name of the object to get.\r\n     * @return The object, or null if the object does not exist in the map.\r\n     */\r\n    Map.prototype.get = function (key) {\r\n        var index = this._keys.indexOf(key);\r\n        if (index !== -1) {\r\n            return this._values[index];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Add or update an object.\r\n     * @param key The name of the object to set.\r\n     * @param value The value to set for this object.\r\n     */\r\n    Map.prototype.set = function (key, value) {\r\n        var index = this._keys.indexOf(key);\r\n        if (index !== -1) {\r\n            this._values[index] = value;\r\n        }\r\n        else {\r\n            this._keys.push(key);\r\n            this._values.push(value);\r\n        }\r\n    };\r\n    /**\r\n     * Remove an object from the map.\r\n     * @param key The object's name to be removed from the map.\r\n     * @return True if the object was removed, false if the object was not found.\r\n     */\r\n    Map.prototype.remove = function (key) {\r\n        var index = this._keys.indexOf(key);\r\n        if (index !== -1) {\r\n            this._keys.splice(index, 1);\r\n            this._values.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Get an array containing all the objects of the map.\r\n     */\r\n    Map.prototype.getAll = function () {\r\n        return this._values.slice();\r\n    };\r\n    /**\r\n     * Clear the map by removing all the keys and values that it stores.\r\n     */\r\n    Map.prototype.removeAll = function () {\r\n        this._keys = [];\r\n        this._values = [];\r\n    };\r\n    return Map;\r\n}());\r\nexports.Map = Map;\r\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Map.js\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The renderer is used to render graphics to a canvas.<br>\r\n * Any game instance comes bundled with a renderer already.\r\n */\r\nvar Renderer = /** @class */ (function () {\r\n    /**\r\n     * Create a Renderer.\r\n     * @param context The context of the canvas to render to.\r\n     */\r\n    function Renderer(context) {\r\n        this._context = context;\r\n    }\r\n    /**\r\n     * Render a scene to the canvas.\r\n     * @param scene The scene to render.\r\n     */\r\n    Renderer.prototype.render = function (scene) {\r\n        this._context.fillStyle = '#000000';\r\n        this._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\r\n        scene._runRender(this._context);\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n//# sourceMappingURL=Renderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Renderer.js\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Map_1 = require(\"./Map\");\r\n/**\r\n * A scene contains all the game objects in a specific \"word\" of your game.<br>\r\n * For example, you may have a \"MainScreen\" scene that will contain everything\r\n * that is in the main screen of your game.<br>\r\n * You could then have a \"Level1\" scene that will contain the level 1 of you game. etc.\r\n */\r\nvar Scene = /** @class */ (function (_super) {\r\n    __extends(Scene, _super);\r\n    function Scene() {\r\n        var _this = _super.call(this) || this;\r\n        _this.create();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Called the the scene is created.<br>\r\n     * You can set your game objects (UI, characters, music, etc) from here.\r\n     */\r\n    Scene.prototype.create = function () {\r\n    };\r\n    /**\r\n     * Run every frame to update the scene.<br>\r\n     * This is useful when you want an update to run as long as your scene is\r\n     * being rendered, independently from the game objects it contains.\r\n     */\r\n    Scene.prototype.update = function () {\r\n    };\r\n    /**\r\n     * Used internally to update the scene and its game objects.\r\n     */\r\n    Scene.prototype._runUpdate = function () {\r\n        this.update();\r\n        for (var _i = 0, _a = this.getAll(); _i < _a.length; _i++) {\r\n            var gameObject = _a[_i];\r\n            gameObject.update();\r\n        }\r\n    };\r\n    /**\r\n     * Used internally by the renderer to render the scene.\r\n     * @param context The renderer's context, automatically passed in.\r\n     */\r\n    Scene.prototype._runRender = function (context) {\r\n        for (var _i = 0, _a = this.getAll(); _i < _a.length; _i++) {\r\n            var gameObject = _a[_i];\r\n            gameObject.render(context);\r\n        }\r\n    };\r\n    return Scene;\r\n}(Map_1.Map));\r\nexports.Scene = Scene;\r\n//# sourceMappingURL=Scene.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Scene.js\n// module id = 3\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Time_1 = require(\"./Time\");\r\n/**\r\n * Used internally to run the game.\r\n */\r\nvar Loop = /** @class */ (function () {\r\n    function Loop() {\r\n    }\r\n    Loop.start = function (callback) {\r\n        var _this = this;\r\n        if (this._animationFrame === 0) {\r\n            this._callback = callback;\r\n            this._animationFrame = window.requestAnimationFrame(function (frame) {\r\n                _this._update(frame);\r\n            });\r\n        }\r\n    };\r\n    Loop.stop = function () {\r\n        if (this._animationFrame !== 0) {\r\n            window.cancelAnimationFrame(this._animationFrame);\r\n            this._animationFrame = 0;\r\n        }\r\n    };\r\n    Loop._update = function (frame) {\r\n        var _this = this;\r\n        this._animationFrame = window.requestAnimationFrame(function (frame) {\r\n            _this._update(frame);\r\n        });\r\n        Time_1.Time._setFrame(frame);\r\n        this._callback();\r\n    };\r\n    Loop._animationFrame = 0;\r\n    return Loop;\r\n}());\r\nexports.Loop = Loop;\r\n//# sourceMappingURL=Loop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Loop.js\n// module id = 4\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Store time values and make them easy to access from anywhere\r\n * in your game just by importing this static class.\r\n */\r\nvar Time = /** @class */ (function () {\r\n    function Time() {\r\n    }\r\n    /**\r\n     * Used internally to update the time data.\r\n     * @param frame The total time elapsed in milliseconds, passed in by the browser.\r\n     */\r\n    Time._setFrame = function (frame) {\r\n        this._deltaTime = frame - this._time;\r\n        this._time = frame;\r\n    };\r\n    Object.defineProperty(Time, \"deltaTime\", {\r\n        /**\r\n         * The time elapsed since the last frame, in milliseconds.<br>\r\n         * Useful for smooth animations that will run at the same speed regardless\r\n         * of the rendering speed.\r\n         */\r\n        get: function () {\r\n            return this._deltaTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Time, \"time\", {\r\n        /**\r\n         * The time elapsed since the game has started being rendered, in milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._time;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Time, \"FPS\", {\r\n        /**\r\n         * The average amount of frames per second based on the current deltaTime.\r\n         */\r\n        get: function () {\r\n            return 1000 / this._deltaTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Time._deltaTime = 0;\r\n    Time._time = 0;\r\n    return Time;\r\n}());\r\nexports.Time = Time;\r\n//# sourceMappingURL=Time.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Time.js\n// module id = 5\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Map the mouse input.\r\n */\r\nvar Mouse = /** @class */ (function () {\r\n    function Mouse() {\r\n    }\r\n    Object.defineProperty(Mouse, \"cursorX\", {\r\n        /**\r\n         * The X position of the cursor in the window.\r\n         */\r\n        get: function () {\r\n            return this._cursorX;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"cursorY\", {\r\n        /**\r\n         * The Y position of the cursor in the window.\r\n         */\r\n        get: function () {\r\n            return this._cursorY;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"leftButtonDown\", {\r\n        /**\r\n         * Whether the left button is down or not.\r\n         */\r\n        get: function () {\r\n            return this._leftButton;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"middleButtonDown\", {\r\n        /**\r\n         * Whether the middle (wheel) button is down or not.\r\n         */\r\n        get: function () {\r\n            return this._middleButton;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"rightButtonDown\", {\r\n        /**\r\n         * Whether the right button is down or not.\r\n         */\r\n        get: function () {\r\n            return this._rightButton;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"leftClick\", {\r\n        /**\r\n         * Evaluate to true when a left click occurs.\r\n         */\r\n        get: function () {\r\n            return this._leftClick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"middleClick\", {\r\n        /**\r\n         * Evaluate to true when a middle (wheel) click occurs.\r\n         */\r\n        get: function () {\r\n            return this._middleClick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"rightClick\", {\r\n        /**\r\n         * Evaluate to true when a right click occurs.\r\n         */\r\n        get: function () {\r\n            return this._rightClick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"scrollX\", {\r\n        /**\r\n         * The scroll movement in the X axis.<br>\r\n         * Possible values: -1 (scroll to -x), 0 (no scroll x), 1 (scroll to +x).\r\n         */\r\n        get: function () {\r\n            return this._scrollX;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"scrollY\", {\r\n        /**\r\n         * The scroll movement in the Y axis.<br>\r\n         * Possible values: -1 (scroll to -y), 0 (no scroll y), 1 (scroll to +y).\r\n         */\r\n        get: function () {\r\n            return this._scrollY;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"scrollUp\", {\r\n        /**\r\n         * Evaluate to true when the user is scrolling up.\r\n         */\r\n        get: function () {\r\n            return this._scrollY === -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"scrollDown\", {\r\n        /**\r\n         * Evaluate to true when the user is scrolling down.\r\n         */\r\n        get: function () {\r\n            return this._scrollY === 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"scrollLeft\", {\r\n        /**\r\n         * Evaluate to true when the user is scrolling left.\r\n         */\r\n        get: function () {\r\n            return this._scrollX === -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Mouse, \"scrollRight\", {\r\n        /**\r\n         * Evaluate to true when the user is scrolling right.\r\n         */\r\n        get: function () {\r\n            return this._scrollY === 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Used internally to initialise the mouse input.\r\n     * @param canvas The game's canvas.\r\n     */\r\n    Mouse._init = function (canvas) {\r\n        var _this = this;\r\n        canvas.addEventListener('mousemove', function (e) {\r\n            _this._cursorX = e.clientX - canvas.offsetLeft;\r\n            _this._cursorY = e.clientY - canvas.offsetTop;\r\n        });\r\n        canvas.addEventListener('mousedown', function (e) {\r\n            e.preventDefault();\r\n            switch (e.button) {\r\n                case 0:\r\n                    _this._leftButton = true;\r\n                    _this._leftClick = true;\r\n                    break;\r\n                case 1:\r\n                    _this._middleButton = true;\r\n                    _this._middleClick = true;\r\n                    break;\r\n                case 2:\r\n                    _this._rightButton = true;\r\n                    _this._rightClick = true;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            window.addEventListener('mouseup', function (e) {\r\n                if (!_this._leftButton || !_this._middleButton || !_this._rightButton)\r\n                    return;\r\n                e.preventDefault();\r\n                switch (e.button) {\r\n                    case 0:\r\n                        _this._leftButton = false;\r\n                        break;\r\n                    case 1:\r\n                        _this._middleButton = false;\r\n                        break;\r\n                    case 2:\r\n                        _this._rightButton = false;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n            canvas.addEventListener('contextmenu', function (e) {\r\n                e.preventDefault();\r\n            });\r\n            window.addEventListener('wheel', function (e) {\r\n                e.preventDefault();\r\n                if (e.deltaX > 0) {\r\n                    _this._scrollX = 1;\r\n                }\r\n                else if (e.deltaX < 0) {\r\n                    _this._scrollX = -1;\r\n                }\r\n                else {\r\n                    _this._scrollX = 0;\r\n                }\r\n                if (e.deltaY > 0) {\r\n                    _this._scrollY = 1;\r\n                }\r\n                else if (e.deltaY < 0) {\r\n                    _this._scrollY = -1;\r\n                }\r\n                else {\r\n                    _this._scrollY = 0;\r\n                }\r\n            });\r\n            window.addEventListener('blur', function () {\r\n                _this._leftButton = false;\r\n                _this._middleButton = false;\r\n                _this._rightButton = false;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Used internally to update the mouse input states.\r\n     */\r\n    Mouse._update = function () {\r\n        this._scrollX = 0;\r\n        this._scrollY = 0;\r\n        this._leftClick = false;\r\n        this._middleClick = false;\r\n        this._rightClick = false;\r\n    };\r\n    Mouse._cursorX = 0;\r\n    Mouse._cursorY = 0;\r\n    Mouse._leftButton = false;\r\n    Mouse._leftClick = false;\r\n    Mouse._middleButton = false;\r\n    Mouse._middleClick = false;\r\n    Mouse._rightButton = false;\r\n    Mouse._rightClick = false;\r\n    Mouse._scrollX = 0;\r\n    Mouse._scrollY = 0;\r\n    return Mouse;\r\n}());\r\nexports.Mouse = Mouse;\r\n//# sourceMappingURL=Mouse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Mouse.js\n// module id = 6\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Map_1 = require(\"./Map\");\r\n/**\r\n * Map the keyboard and the state of each keys.\r\n */\r\nvar Keyboard = /** @class */ (function () {\r\n    function Keyboard() {\r\n    }\r\n    /**\r\n     * Check if a key is down.\r\n     * @param key The key to check.\r\n     */\r\n    Keyboard.keyDown = function (key) {\r\n        return this._keys.get(key) || false;\r\n    };\r\n    /**\r\n     * Check if a key is pressed (fires only when the key is clicked).\r\n     * @param key The key to check.\r\n     */\r\n    Keyboard.keyPressed = function (key) {\r\n        return this._pressed.indexOf(key) !== -1;\r\n    };\r\n    /**\r\n     * Get the last key that was pressed.<br>\r\n     * Can for example be used in a settings menu when asking the user the desired\r\n     * key-binding.<br>\r\n     * The value is reset to null or to the new last key each frame.\r\n     * @return The last key pressed, or null if no key was previously pressed.\r\n     */\r\n    Keyboard.lastKey = function () {\r\n        return this._lastKey;\r\n    };\r\n    /**\r\n     * Used internally to initialise the keyboard input.\r\n     */\r\n    Keyboard._init = function () {\r\n        var _this = this;\r\n        this.preventDefault = false;\r\n        this._keys = new Map_1.Map();\r\n        this._pressed = [];\r\n        this._lastKey = null;\r\n        window.addEventListener('keydown', function (e) {\r\n            if (_this.preventDefault)\r\n                e.preventDefault();\r\n            _this._keys.set(e.code, true);\r\n            _this._pressed.push(e.code);\r\n            _this._lastKey = e.code;\r\n        });\r\n        window.addEventListener('keyup', function (e) {\r\n            if (_this.preventDefault)\r\n                e.preventDefault();\r\n            _this._keys.set(e.code, false);\r\n        });\r\n        window.addEventListener('keypress', function (e) {\r\n            if (_this.preventDefault)\r\n                e.preventDefault();\r\n        });\r\n    };\r\n    /**\r\n     * Used internally to update the keyboard's keys state.\r\n     */\r\n    Keyboard._update = function () {\r\n        this._pressed = [];\r\n        this._lastKey = null;\r\n    };\r\n    return Keyboard;\r\n}());\r\nexports.Keyboard = Keyboard;\r\n//# sourceMappingURL=Keyboard.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Keyboard.js\n// module id = 7\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * This class represent the game's screen (canvas).<br>\r\n * It makes it easy to access the width, height and offsets properties of the\r\n * game's screen from anywhere in your game.\r\n */\r\nvar Screen = /** @class */ (function () {\r\n    function Screen() {\r\n    }\r\n    Object.defineProperty(Screen, \"width\", {\r\n        /**\r\n         * The width of the game's canvas.\r\n         */\r\n        get: function () {\r\n            return this._canvas.width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Screen, \"height\", {\r\n        /**\r\n         * The height of the game's canvas.\r\n         */\r\n        get: function () {\r\n            return this._canvas.height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Screen, \"offsetWidth\", {\r\n        /**\r\n         * The offset width of the game's canvas.\r\n         */\r\n        get: function () {\r\n            return this._canvas.offsetWidth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Screen, \"offsetHeight\", {\r\n        /**\r\n         * The offset height of the game's canvas.\r\n         */\r\n        get: function () {\r\n            return this._canvas.offsetHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Screen, \"offsetX\", {\r\n        /**\r\n         * The offset left of the game canvas.\r\n         */\r\n        get: function () {\r\n            return this._canvas.offsetLeft;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Screen, \"offsetY\", {\r\n        /**\r\n         * The offset top of the game canvas.\r\n         */\r\n        get: function () {\r\n            return this._canvas.offsetTop;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Used internally to initialise the Screen class.\r\n     * @param canvas The game's canvas.\r\n     */\r\n    Screen._init = function (canvas) {\r\n        this._canvas = canvas;\r\n    };\r\n    return Screen;\r\n}());\r\nexports.Screen = Screen;\r\n//# sourceMappingURL=Screen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Screen.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Map_1 = require(\"./Map\");\r\n/**\r\n * The loader is an easy way to preload all the required assets for your game.<br>\r\n * You can use it from the load() method of your Game class.<br>\r\n * It can also be used while the game is running to load assets on the fly.\r\n */\r\nvar Loader = /** @class */ (function () {\r\n    function Loader() {\r\n    }\r\n    /**\r\n     * Used internally to preload the game and its assets.\r\n     * @param game The game instance.\r\n     */\r\n    Loader._init = function (game) {\r\n        this._game = game;\r\n        this._game.load();\r\n        if (this._files.getAll().length === 0) {\r\n            this._fileLoaded();\r\n        }\r\n    };\r\n    /**\r\n     * Load an image file.\r\n     * @param fileName The name to save this file as in the loader.\r\n     * @param filePath The path to the file to load.\r\n     */\r\n    Loader.loadImage = function (fileName, filePath) {\r\n        var _this = this;\r\n        var image = document.createElement('img');\r\n        filePath = this.basePath + \"/\" + filePath;\r\n        this._images.set(fileName, image);\r\n        this._files.set(fileName, false);\r\n        image.addEventListener('load', function () {\r\n            _this._files.set(fileName, true);\r\n            if (!_this._loaded)\r\n                _this._fileLoaded();\r\n        });\r\n        image.addEventListener('error', function () {\r\n            console.log(\"Could not load file: \" + filePath + \".\");\r\n        });\r\n        image.src = filePath;\r\n    };\r\n    /**\r\n     * Load a video file.\r\n     * @param fileName The name to save this file as in the loader.\r\n     * @param filePath The path to the file to load.\r\n     */\r\n    Loader.loadVideo = function (fileName, filePath) {\r\n        var _this = this;\r\n        var video = document.createElement('video');\r\n        filePath = this.basePath + \"/\" + filePath;\r\n        this._videos.set(fileName, video);\r\n        this._files.set(fileName, false);\r\n        video.addEventListener('loadeddata', function () {\r\n            _this._files.set(fileName, true);\r\n            if (!_this._loaded)\r\n                _this._fileLoaded();\r\n        });\r\n        video.addEventListener('error', function () {\r\n            console.log(\"Could not load file: \" + filePath + \".\");\r\n        });\r\n        video.src = filePath;\r\n    };\r\n    /**\r\n     * Load an audio file.\r\n     * @param fileName The name to save this file as in the loader.\r\n     * @param filePath The path to the file to load.\r\n     */\r\n    Loader.loadAudio = function (fileName, filePath) {\r\n        var _this = this;\r\n        var audio = document.createElement('audio');\r\n        filePath = this.basePath + \"/\" + filePath;\r\n        this._audios.set(fileName, audio);\r\n        this._files.set(fileName, false);\r\n        audio.addEventListener('loadeddata', function () {\r\n            _this._files.set(fileName, true);\r\n            if (!_this._loaded)\r\n                _this._fileLoaded();\r\n        });\r\n        audio.addEventListener('error', function () {\r\n            console.log(\"Could not load file: \" + filePath + \".\");\r\n        });\r\n        audio.src = filePath;\r\n    };\r\n    /**\r\n     * Load a json file.\r\n     * @param fileName The name to save this file as in the loader.\r\n     * @param filePath The path to the file to load.\r\n     */\r\n    Loader.loadJSON = function (fileName, filePath) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        filePath = this.basePath + \"/\" + filePath;\r\n        this._json.set(fileName, {});\r\n        this._files.set(fileName, false);\r\n        xhr.addEventListener('load', function () {\r\n            _this._files.set(fileName, true);\r\n            _this._json.set(fileName, JSON.parse(xhr.responseText));\r\n            if (!_this._loaded)\r\n                _this._fileLoaded();\r\n        });\r\n        xhr.addEventListener('error', function () {\r\n            console.log(\"Could not load file: \" + filePath);\r\n        });\r\n        xhr.open('GET', filePath, true);\r\n        xhr.send();\r\n    };\r\n    /**\r\n     * Get an image that was loaded.<br>\r\n     * If the image was loaded on the fly, it may not be ready yet! You can\r\n     * check whether the file was loaded or not using the loaded() method.\r\n     * @param fileName The name of the file to get.\r\n     * @return The image file, or null if the image was not loaded using loadImage().\r\n     */\r\n    Loader.image = function (fileName) {\r\n        return this._images.get(fileName);\r\n    };\r\n    /**\r\n     * Get a video that was loaded.<br>\r\n     * If the video was loaded on the fly, it may not be ready yet! You can\r\n     * check whether the file was loaded or not using the loaded() method.\r\n     * @param fileName The name of the file to get.\r\n     * @return The video file, or null if the video was not loaded using loadVideo().\r\n     */\r\n    Loader.video = function (fileName) {\r\n        return this._videos.get(fileName);\r\n    };\r\n    /**\r\n     * Get a audio that was loaded.<br>\r\n     * If the audio was loaded on the fly, it may not be ready yet! You can\r\n     * check whether the file was loaded or not using the loaded() method.\r\n     * @param fileName The name of the file to get.\r\n     * @return The audio file, or null if the audio was not loaded using loadAudio().\r\n     */\r\n    Loader.audio = function (fileName) {\r\n        return this._audios.get(fileName);\r\n    };\r\n    /**\r\n     * Get a JSON file that was loaded.<br>\r\n     * If the JSON file was loaded on the fly, it may not be ready yet! You can\r\n     * check whether the file was loaded or not using the loaded() method.\r\n     * @param fileName The name of the file to get.\r\n     * @return The parsed JSON file, or null if the JSON file was not loaded using loadJSON().\r\n     */\r\n    Loader.json = function (fileName) {\r\n        return this._json.get(fileName);\r\n    };\r\n    /**\r\n     * Check whether a file is ready to be used or not.\r\n     * @param fileName The file to check.\r\n     */\r\n    Loader.loaded = function (fileName) {\r\n        return this._files.get(fileName) || false;\r\n    };\r\n    Loader._fileLoaded = function () {\r\n        if (this._files.getAll().indexOf(false) === -1) {\r\n            this._loaded = true;\r\n            this._game._start();\r\n        }\r\n    };\r\n    /** The base path to the assets directory. */\r\n    Loader.basePath = '';\r\n    Loader._loaded = false;\r\n    Loader._images = new Map_1.Map();\r\n    Loader._videos = new Map_1.Map();\r\n    Loader._audios = new Map_1.Map();\r\n    Loader._json = new Map_1.Map();\r\n    Loader._files = new Map_1.Map();\r\n    return Loader;\r\n}());\r\nexports.Loader = Loader;\r\n//# sourceMappingURL=Loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Loader.js\n// module id = 9\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Map_1 = require(\"./Map\");\r\n/**\r\n * The State class is used to store data that can be accessed throughout you game.<br>\r\n * For example, you can use it from a game object to update a state value, then\r\n * access this state value from the game update.<br>\r\n * Think of it as a big container available from anywhere you import it.\r\n */\r\nvar State = /** @class */ (function () {\r\n    function State() {\r\n    }\r\n    /**\r\n     * Used internally to initialise the State class.\r\n     */\r\n    State._init = function () {\r\n        this._states = new Map_1.Map();\r\n    };\r\n    /**\r\n     * Set (create or update) a state value.\r\n     * @param key The name of the state.\r\n     * @param value The value of the state.\r\n     */\r\n    State.set = function (key, value) {\r\n        this._states.set(key, value);\r\n    };\r\n    /**\r\n     * Get a state value.\r\n     * @param key The name of the state.\r\n     * @return The value of the state, null if the state was not set.\r\n     */\r\n    State.get = function (key) {\r\n        return this._states.get(key);\r\n    };\r\n    return State;\r\n}());\r\nexports.State = State;\r\n//# sourceMappingURL=State.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/State.js\n// module id = 10\n// module chunks = 0","import {Game, State} from 'rythmoos-engine';\r\nimport MainScene from './MainScene';\r\n\r\n// Our main game class\r\nclass MyAwesomeGame extends Game {\r\n\r\n  // Override the create method, this is when the game is ready to start\r\n  create() {\r\n    // We can already initialise the score state so it is available from anywhere we need it\r\n    State.set('score', 0);\r\n\r\n    // Let's set the initial game scene here\r\n    this.scene = new MainScene();\r\n  }\r\n\r\n}\r\n\r\n// Start our game when the window loads\r\nwindow.onload = () => {\r\n  new MyAwesomeGame(window.innerWidth, window.innerHeight, document.body);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 11\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Renderer_1 = require(\"./Renderer\");\r\nvar Scene_1 = require(\"./Scene\");\r\nvar Loop_1 = require(\"./Loop\");\r\nvar Mouse_1 = require(\"./Mouse\");\r\nvar Keyboard_1 = require(\"./Keyboard\");\r\nvar Screen_1 = require(\"./Screen\");\r\nvar Loader_1 = require(\"./Loader\");\r\nvar State_1 = require(\"./State\");\r\n/**\r\n * The base class of any game.\r\n */\r\nvar Game = /** @class */ (function () {\r\n    /**\r\n     * Create a Game.\r\n     * @param width The width of the game.\r\n     * @param height The height of the game.\r\n     * @param container The HTML parent element for the game's canvas.\r\n     */\r\n    function Game(width, height, container) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.container = container;\r\n        this.scene = new Scene_1.Scene();\r\n        this._canvas = document.createElement('canvas');\r\n        this._renderer = new Renderer_1.Renderer(this._canvas.getContext('2d'));\r\n        this._running = false;\r\n        this._canvas.width = this.width;\r\n        this._canvas.height = this.height;\r\n        this.container.appendChild(this._canvas);\r\n        Screen_1.Screen._init(this._canvas);\r\n        Mouse_1.Mouse._init(this._canvas);\r\n        Keyboard_1.Keyboard._init();\r\n        State_1.State._init();\r\n        Loader_1.Loader._init(this);\r\n    }\r\n    /**\r\n     * Called when the game is launched.<br>\r\n     * Useful for assets loading.\r\n     */\r\n    Game.prototype.load = function () {\r\n    };\r\n    /**\r\n     * Called when the game is ready to run, just before it starts.<br>\r\n     * You can set a scene and access the loaded assets safely from here.\r\n     */\r\n    Game.prototype.create = function () {\r\n    };\r\n    /**\r\n     * Called before rendering a frame.<br>\r\n     * You can specify things to run every frame as long as your game is running.\r\n     */\r\n    Game.prototype.update = function () {\r\n    };\r\n    /**\r\n     * Used internally to start the game.\r\n     */\r\n    Game.prototype._start = function () {\r\n        var _this = this;\r\n        if (this._running)\r\n            return;\r\n        this._running = true;\r\n        this.create();\r\n        window.focus();\r\n        Loop_1.Loop.start(function () {\r\n            _this.update();\r\n            _this.scene._runUpdate();\r\n            _this._renderer.render(_this.scene);\r\n            Mouse_1.Mouse._update();\r\n            Keyboard_1.Keyboard._update();\r\n        });\r\n    };\r\n    return Game;\r\n}());\r\nexports.Game = Game;\r\n//# sourceMappingURL=Game.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Game.js\n// module id = 12\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A game object defines an entity in your game's world.<br>\r\n * It can be for example the player's character, a button, etc.\r\n */\r\nvar GameObject = /** @class */ (function () {\r\n    function GameObject() {\r\n        this.create();\r\n    }\r\n    /**\r\n     * Called when the game object is created.<br>\r\n     * You can set the game object's properties in here, use the loader\r\n     * to load textures, etc...\r\n     */\r\n    GameObject.prototype.create = function () {\r\n    };\r\n    /**\r\n     * Called every frame as long as the game object is in the active scene.<br>\r\n     * You can update your object property from here to, for example, move a\r\n     * character if a keyboard key is being pressed.\r\n     */\r\n    GameObject.prototype.update = function () {\r\n    };\r\n    /**\r\n     * Called every frame as long as the game object is in the active scene.<br>\r\n     * Render the game object to the screen using the renderer's 2D context.\r\n     * @param context The renderer's context, automatically passed in.\r\n     */\r\n    GameObject.prototype.render = function (context) {\r\n    };\r\n    return GameObject;\r\n}());\r\nexports.GameObject = GameObject;\r\n//# sourceMappingURL=GameObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/GameObject.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Define all the keys available from the Keyboard class.\r\n */\r\nvar Keys;\r\n(function (Keys) {\r\n    Keys[\"Digit0\"] = \"Digit0\";\r\n    Keys[\"Digit1\"] = \"Digit1\";\r\n    Keys[\"Digit2\"] = \"Digit2\";\r\n    Keys[\"Digit3\"] = \"Digit3\";\r\n    Keys[\"Digit4\"] = \"Digit4\";\r\n    Keys[\"Digit5\"] = \"Digit5\";\r\n    Keys[\"Digit6\"] = \"Digit6\";\r\n    Keys[\"Digit7\"] = \"Digit7\";\r\n    Keys[\"Digit8\"] = \"Digit8\";\r\n    Keys[\"Digit9\"] = \"Digit9\";\r\n    Keys[\"KeyA\"] = \"KeyA\";\r\n    Keys[\"KeyB\"] = \"KeyB\";\r\n    Keys[\"KeyC\"] = \"KeyC\";\r\n    Keys[\"KeyD\"] = \"KeyD\";\r\n    Keys[\"KeyE\"] = \"KeyE\";\r\n    Keys[\"KeyF\"] = \"KeyF\";\r\n    Keys[\"KeyG\"] = \"KeyG\";\r\n    Keys[\"KeyH\"] = \"KeyH\";\r\n    Keys[\"KeyI\"] = \"KeyI\";\r\n    Keys[\"KeyJ\"] = \"KeyJ\";\r\n    Keys[\"KeyK\"] = \"KeyK\";\r\n    Keys[\"KeyL\"] = \"KeyL\";\r\n    Keys[\"KeyM\"] = \"KeyM\";\r\n    Keys[\"KeyN\"] = \"KeyN\";\r\n    Keys[\"KeyO\"] = \"KeyO\";\r\n    Keys[\"KeyP\"] = \"KeyP\";\r\n    Keys[\"KeyQ\"] = \"KeyQ\";\r\n    Keys[\"KeyR\"] = \"KeyR\";\r\n    Keys[\"KeyS\"] = \"KeyS\";\r\n    Keys[\"KeyT\"] = \"KeyT\";\r\n    Keys[\"KeyU\"] = \"KeyU\";\r\n    Keys[\"KeyV\"] = \"KeyV\";\r\n    Keys[\"KeyW\"] = \"KeyW\";\r\n    Keys[\"KeyX\"] = \"KeyX\";\r\n    Keys[\"KeyY\"] = \"KeyY\";\r\n    Keys[\"KeyZ\"] = \"KeyZ\";\r\n    Keys[\"Escape\"] = \"Escape\";\r\n    Keys[\"F1\"] = \"F1\";\r\n    Keys[\"F2\"] = \"F2\";\r\n    Keys[\"F3\"] = \"F3\";\r\n    Keys[\"F4\"] = \"F4\";\r\n    Keys[\"F5\"] = \"F5\";\r\n    Keys[\"F6\"] = \"F6\";\r\n    Keys[\"F7\"] = \"F7\";\r\n    Keys[\"F8\"] = \"F8\";\r\n    Keys[\"F9\"] = \"F9\";\r\n    Keys[\"F10\"] = \"F10\";\r\n    Keys[\"F11\"] = \"F11\";\r\n    Keys[\"F12\"] = \"F12\";\r\n    Keys[\"Insert\"] = \"Insert\";\r\n    Keys[\"Delete\"] = \"Delete\";\r\n    Keys[\"Home\"] = \"Home\";\r\n    Keys[\"End\"] = \"End\";\r\n    Keys[\"PageUp\"] = \"PageUp\";\r\n    Keys[\"PageDown\"] = \"PageDown\";\r\n    Keys[\"NumLock\"] = \"NumLock\";\r\n    Keys[\"NumpadDivide\"] = \"NumpadDivide\";\r\n    Keys[\"NumpadMultiply\"] = \"NumpadMultiply\";\r\n    Keys[\"NumpadSubtract\"] = \"NumpadSubtract\";\r\n    Keys[\"NumpadAdd\"] = \"NumpadAdd\";\r\n    Keys[\"NumpadEnter\"] = \"NumpadEnter\";\r\n    Keys[\"NumpadDecimal\"] = \"NumpadDecimal\";\r\n    Keys[\"Numpad0\"] = \"Numpad0\";\r\n    Keys[\"Numpad1\"] = \"Numpad1\";\r\n    Keys[\"Numpad2\"] = \"Numpad2\";\r\n    Keys[\"Numpad3\"] = \"Numpad3\";\r\n    Keys[\"Numpad4\"] = \"Numpad4\";\r\n    Keys[\"Numpad5\"] = \"Numpad5\";\r\n    Keys[\"Numpad6\"] = \"Numpad6\";\r\n    Keys[\"Numpad7\"] = \"Numpad7\";\r\n    Keys[\"Numpad8\"] = \"Numpad8\";\r\n    Keys[\"Numpad9\"] = \"Numpad9\";\r\n    Keys[\"ArrowUp\"] = \"ArrowUp\";\r\n    Keys[\"ArrowDown\"] = \"ArrowDown\";\r\n    Keys[\"ArrowLeft\"] = \"ArrowLeft\";\r\n    Keys[\"ArrowRight\"] = \"ArrowRight\";\r\n    Keys[\"Backquote\"] = \"Backquote\";\r\n    Keys[\"Minus\"] = \"Minus\";\r\n    Keys[\"Equal\"] = \"Equal\";\r\n    Keys[\"Backspace\"] = \"Backspace\";\r\n    Keys[\"BracketLeft\"] = \"BracketLeft\";\r\n    Keys[\"BracketRight\"] = \"BracketRight\";\r\n    Keys[\"Quote\"] = \"Quote\";\r\n    Keys[\"Backslash\"] = \"Backslash\";\r\n    Keys[\"Comma\"] = \"Comma\";\r\n    Keys[\"Period\"] = \"Period\";\r\n    Keys[\"Slash\"] = \"Slash\";\r\n    Keys[\"Enter\"] = \"Enter\";\r\n    Keys[\"ShiftLeft\"] = \"ShiftLeft\";\r\n    Keys[\"ShiftRight\"] = \"ShiftRight\";\r\n    Keys[\"CapsLock\"] = \"CapsLock\";\r\n    Keys[\"Tab\"] = \"Tab\";\r\n    Keys[\"ControlLeft\"] = \"ControlLeft\";\r\n    Keys[\"ControlRight\"] = \"ControlRight\";\r\n    Keys[\"MetaLeft\"] = \"MetaLeft\";\r\n    Keys[\"MetaRight\"] = \"MetaRight\";\r\n    Keys[\"AltLeft\"] = \"AltLeft\";\r\n    Keys[\"AltRight\"] = \"AltRight\";\r\n})(Keys = exports.Keys || (exports.Keys = {}));\r\n;\r\n//# sourceMappingURL=Keys.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rythmoos-engine/build/lib/Keys.js\n// module id = 14\n// module chunks = 0","import {Scene} from 'rythmoos-engine';\r\nimport Circle from './Circle';\r\nimport Score from './Score';\r\nimport FPSCounter from './FPSCounter';\r\n\r\n// Our main scene\r\nexport default class MainScene extends Scene {\r\n\r\n  // Override the create method so we can setup the scene\r\n  create() {\r\n    // Let's add our game objects\r\n    this.set('circle', new Circle());\r\n    this.set('score', new Score());\r\n    this.set('fps counter', new FPSCounter());\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/MainScene.js\n// module id = 15\n// module chunks = 0","import {GameObject, Screen, Mouse, State} from 'rythmoos-engine';\r\n\r\n// Our circle game object\r\nexport default class Circle extends GameObject {\r\n\r\n  // Override the create method\r\n  create() {\r\n    // Let's set up our game object properties here\r\n\r\n    // The radius of our circle\r\n    this.radius = 50;\r\n\r\n    // The x and y coordinates\r\n    this.x = this.getNewPosition(Screen.width);\r\n    this.y = this.getNewPosition(Screen.height);\r\n\r\n    // Let's set a boolean value that checks whether the mouse is hovering the circle or not.\r\n    this.hovered = false;\r\n\r\n    // The colour of our circle (let's make it white when hovered)\r\n    this.colour = '#ff00ff';\r\n  }\r\n\r\n  // Override the update method\r\n  update() {\r\n    // This method is ran each frame, before the rendering process.\r\n    // Let's update our game object properties from here:\r\n\r\n    // If the circle is hovered, let's set its colour to white, or set it to\r\n    // #ff00ff otherwise.\r\n    this.colour = this.hovered ? '#ffffff' : '#ff00ff';\r\n\r\n    // If the mouse left button is clicked\r\n    if (Mouse.leftClick) {\r\n      // Let's be mean here and remove 1 point from the player's score if he clicks outside\r\n      // of the circle.\r\n      if (this.hovered === false) {\r\n        State.set('score', State.get('score') - 1);\r\n      } else {\r\n        // Otherwise, we'll add 1 to the score\r\n        State.set('score', State.get('score') + 1);\r\n      }\r\n\r\n      // Set new positions to our circle when a click occurs\r\n      this.x = this.getNewPosition(Screen.width);\r\n      this.y  =this.getNewPosition(Screen.height);\r\n    }\r\n  }\r\n\r\n  // Override the render method\r\n  render(context) {\r\n    // We will render our object form here.\r\n    context.fillStyle = this.colour;\r\n\r\n    // Draw the circle\r\n    context.beginPath();\r\n    context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    context.fill();\r\n\r\n    // Since we drew our circle's path, we can use the context isPointInPath method to check\r\n    // whether the cursor is in the path or not.\r\n    this.hovered = context.isPointInPath(Mouse.cursorX, Mouse.cursorY);\r\n  }\r\n\r\n  /**\r\n   * Simple custom method to set our game object's x and y coordinates\r\n   * @param {number} max The max possible value\r\n   * @return A random x\r\n   */\r\n  getNewPosition(max) {\r\n    // Some very complex mathemical stuff\r\n    return Math.random() * (max - this.radius * 2) + this.radius;\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Circle.js\n// module id = 16\n// module chunks = 0","import {GameObject, State, Screen} from 'rythmoos-engine';\r\n\r\n// Our score class\r\nexport default class Score extends GameObject {\r\n\r\n  // Override the create method to set our properties\r\n  create() {\r\n    this.x = Screen.width - 30;\r\n    this.y = Screen.height - 30;\r\n  }\r\n\r\n  // Override the render method to render our score text\r\n  render(context) {\r\n    context.fillStyle = '#ffffff';\r\n    context.font = '36px Arial';\r\n\r\n    // That will allow us to position the text from its bottom right corner\r\n    context.textAlign = 'right';\r\n    context.textBaseline = 'bottom';\r\n    \r\n    context.fillText(`Score: ${State.get('score')}`, this.x, this.y);\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Score.js\n// module id = 17\n// module chunks = 0","import {GameObject, Time} from 'rythmoos-engine';\r\n\r\n// Our FPS counter\r\nexport default class FPSCounter extends GameObject {\r\n\r\n  // We'll simply override the render method here\r\n  render(context) {\r\n    context.fillStyle = '#ffffff';\r\n    context.font = '20px Arial';\r\n\r\n    // That will allow us to position the text from its top left corner\r\n    context.textAlign = 'left';\r\n    context.textBaseline = 'top';\r\n    \r\n    context.fillText(`FPS: ${Math.round(Time.FPS)}`, 15, 15);\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/FPSCounter.js\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}