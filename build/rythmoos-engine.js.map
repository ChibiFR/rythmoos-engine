{"version":3,"sources":["webpack:///webpack/bootstrap 95f657a650793ce91c7d","webpack:///./src/Map.ts","webpack:///./src/Renderer.ts","webpack:///./src/Scene.ts","webpack:///./src/Mouse.ts","webpack:///./src/Keyboard.ts","webpack:///./src/Screen.ts","webpack:///./src/Loader.ts","webpack:///./src/State.ts","webpack:///./src/Time.ts","webpack:///./src/VirtualContext.ts","webpack:///./src/index.ts","webpack:///./src/Game.ts","webpack:///./src/GameObject.ts","webpack:///./src/Keys.ts"],"names":[],"mappings":"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","file":"rythmoos-engine.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 95f657a650793ce91c7d","/**\r\n * A collection with a non-indexed key.<br>\r\n * Useful to store a set of values of the same type.\r\n */\r\nexport class Map<T> {\r\n  private _keys: string[];\r\n  private _values: T[];\r\n\r\n  constructor() {\r\n    this._keys = [];\r\n    this._values = [];\r\n  }\r\n\r\n  /**\r\n   * Get an value from the map.\r\n   * @param key The name of the value to get.\r\n   * @return The value, or null if the value does not exist in the map.\r\n   */\r\n  public get(key: string): T|null {\r\n    const index = this._keys.indexOf(key);\r\n\r\n    if (index !== -1) {\r\n      return this._values[index];\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Add or update an value.\r\n   * @param key The name of the value to set.\r\n   * @param value The value to set for this value.\r\n   */\r\n  public set(key: string, value: T): void {\r\n    const index = this._keys.indexOf(key);\r\n\r\n    if (index !== -1) {\r\n      this._values[index] = value;\r\n    } else {\r\n      this._keys.push(key);\r\n      this._values.push(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove an value from the map.\r\n   * @param key The value's name to be removed from the map.\r\n   * @return True if the value was removed, false if the value was not found.\r\n   */\r\n  public remove(key: string): boolean {\r\n    const index = this._keys.indexOf(key);\r\n\r\n    if (index !== -1) {\r\n      this._keys.splice(index, 1);\r\n      this._values.splice(index, 1);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get an array containing all the values of the map.\r\n   */\r\n  public getAll(): T[] {\r\n    return [...this._values];\r\n  }\r\n\r\n  /**\r\n   * Clear the map by removing all the keys and values that it stores.\r\n   */\r\n  public removeAll() {\r\n    this._keys = [];\r\n    this._values = [];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Map.ts","import {Scene} from './Scene';\r\n\r\n/**\r\n * The renderer is used to render graphics to a canvas.<br>\r\n * Any game instance comes bundled with a renderer already.\r\n */\r\nexport class Renderer {\r\n  /** The game's background colour. Defaults to black (#000000). */\r\n  public backgroundColour: string;\r\n  private _context: CanvasRenderingContext2D;\r\n\r\n  /**\r\n   * Create a Renderer.\r\n   * @param context The context of the canvas to render to.\r\n   */\r\n  constructor(context: CanvasRenderingContext2D) {\r\n    this.backgroundColour = '#000000';\r\n    this._context = context;\r\n  }\r\n\r\n  /**\r\n   * The renderer's context.\r\n   */\r\n  public get context(): CanvasRenderingContext2D {\r\n    return this._context;\r\n  }\r\n\r\n  /**\r\n   * Set properties to apply to the context everytime the render method is called.<br>\r\n   * It could for example be used to apply a default fillStyle or a global composite\r\n   * operation to all your game objects.\r\n   * @param context The renderer's context, automatically passed in.\r\n   */\r\n  public contextProperties(context: CanvasRenderingContext2D): void {\r\n  }\r\n\r\n  /**\r\n   * Render a scene to the canvas.\r\n   * @param scene The scene to render.\r\n   */\r\n  public render(scene: Scene): void {\r\n    this._context.fillStyle = this.backgroundColour;\r\n    this._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\r\n\r\n    this.contextProperties(this._context);\r\n\r\n    for (const gameObject of scene.getAll()) {\r\n      this._context.save();\r\n      gameObject.render(this._context);\r\n      this._context.restore();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Renderer.ts","import {IUpdatable} from './IUpdatable';\r\nimport {IRenderable} from './IRenderable';\r\nimport {Map} from './Map';\r\nimport {GameObject} from './GameObject';\r\nimport {Game} from './Game';\r\n\r\n/**\r\n * A scene contains all the game objects in a specific \"screen\" of your game.<br>\r\n * For example, you may have a \"MainScreen\" scene that will contain everything\r\n * that is in the main screen of your game.<br>\r\n * You could then have a \"Level1\" scene that will contain the level 1 of you game. etc.\r\n */\r\nexport class Scene implements IUpdatable {\r\n  /** A reference to your main Game instance. */\r\n  public game: Game;\r\n  private _gameObjects: Map<GameObject>;\r\n\r\n  constructor() {\r\n    this._gameObjects = new Map<GameObject>();\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Called when the scene is created.<br>\r\n   * You can set your game objects (UI, characters, music, etc) from here.\r\n   */\r\n  public create(): void {\r\n  }\r\n\r\n  /**\r\n   * Run every frame to update the scene.<br>\r\n   * This is useful when you want an update to run as long as your scene is\r\n   * being rendered, independently from the game objects it contains.\r\n   */\r\n  public update(): void {\r\n  }\r\n\r\n  /**\r\n   * Get a game object from the scene.\r\n   * @param gameObjectName The game object to get.\r\n   * @return The requested game object, or null if it does not exist in the scene.\r\n   */\r\n  public get(gameObjectName: string): GameObject|null {\r\n    return this._gameObjects.get(gameObjectName);\r\n  }\r\n\r\n  /**\r\n   * Set a game object.\r\n   * @param gameObjectName The name of the game object to set.\r\n   * @param gameObject The game object.\r\n   */\r\n  public set(gameObjectName: string, gameObject: GameObject): void {\r\n    gameObject.scene = this;\r\n    this._gameObjects.set(gameObjectName, gameObject);\r\n  }\r\n\r\n  /**\r\n   * Remove a game object.\r\n   * @param gameObjectName The name of the game object to remove.\r\n   */\r\n  public remove(gameObjectName: string): boolean {\r\n    return this._gameObjects.remove(gameObjectName);\r\n  }\r\n\r\n  /**\r\n   * Get all the game objects of this scene as an array.\r\n   */\r\n  public getAll(): GameObject[] {\r\n    return this._gameObjects.getAll();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Scene.ts","import {IUpdatable} from './IUpdatable';\r\n\r\n/**\r\n * Map the mouse input.\r\n */\r\nexport abstract class Mouse {\r\n  private static _cursorX: number = 0;\r\n  private static _cursorY: number = 0;\r\n  private static _movementX: number = 0;\r\n  private static _movementY: number = 0;\r\n  private static _leftButton: boolean = false;\r\n  private static _leftClick: boolean = false;\r\n  private static _middleButton: boolean = false;\r\n  private static _middleClick: boolean = false;\r\n  private static _rightButton: boolean = false;\r\n  private static _rightClick: boolean = false;\r\n  private static _scrollX: number = 0;\r\n  private static _scrollY: number = 0;\r\n\r\n  /**\r\n   * The X position of the cursor in the window.\r\n   */\r\n  public static get cursorX(): number {\r\n    return this._cursorX;\r\n  }\r\n\r\n  /**\r\n   * The Y position of the cursor in the window.\r\n   */\r\n  public static get cursorY(): number {\r\n    return this._cursorY;\r\n  }\r\n\r\n  /**\r\n   * The cursor movement in the X axis, in pixels.\r\n   */\r\n  public static get movementX(): number {\r\n    return this._movementX;\r\n  }\r\n\r\n  /**\r\n   * The cursor movement in the Y axis, in pixels.\r\n   */\r\n  public static get movementY(): number {\r\n    return this._movementY;\r\n  }\r\n\r\n  /**\r\n   * Whether the left button is down or not.\r\n   */\r\n  public static get leftButtonDown(): boolean {\r\n    return this._leftButton;\r\n  }\r\n\r\n  /**\r\n   * Whether the middle (wheel) button is down or not.\r\n   */\r\n  public static get middleButtonDown(): boolean {\r\n    return this._middleButton;\r\n  }\r\n\r\n  /**\r\n   * Whether the right button is down or not.\r\n   */\r\n  public static get rightButtonDown(): boolean {\r\n    return this._rightButton;\r\n  }\r\n\r\n  /**\r\n   * Whether the left button is up or not.\r\n   */\r\n  public static get leftButtonUp(): boolean {\r\n    return !this._leftButton;\r\n  }\r\n\r\n  /**\r\n   * Whether the middle button (wheel) is up or not.\r\n   */\r\n  public static get middleButtonUp(): boolean {\r\n    return !this._middleButton;\r\n  }\r\n\r\n  /**\r\n   * Whether the right button is up or not.\r\n   */\r\n  public static get rightButtonUp(): boolean {\r\n    return !this._rightButton;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when a left click occurs.\r\n   */\r\n  public static get leftClick(): boolean {\r\n    return this._leftClick;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when a middle (wheel) click occurs.\r\n   */\r\n  public static get middleClick(): boolean {\r\n    return this._middleClick;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when a right click occurs.\r\n   */\r\n  public static get rightClick(): boolean {\r\n    return this._rightClick;\r\n  }\r\n\r\n  /**\r\n   * The scroll movement in the X axis.<br>\r\n   * Possible values: -1 (scroll to -x), 0 (no scroll x), 1 (scroll to +x).\r\n   */\r\n  public static get scrollX(): number {\r\n    return this._scrollX;\r\n  }\r\n\r\n  /**\r\n   * The scroll movement in the Y axis.<br>\r\n   * Possible values: -1 (scroll to -y), 0 (no scroll y), 1 (scroll to +y).\r\n   */\r\n  public static get scrollY(): number {\r\n    return this._scrollY;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when the user is scrolling up.\r\n   */\r\n  public static get scrollUp(): boolean {\r\n    return this._scrollY === -1;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when the user is scrolling down.\r\n   */\r\n  public static get scrollDown(): boolean {\r\n    return this._scrollY === 1;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when the user is scrolling left.\r\n   */\r\n  public static get scrollLeft(): boolean {\r\n    return this._scrollX === -1;\r\n  }\r\n\r\n  /**\r\n   * Evaluate to true when the user is scrolling right.\r\n   */\r\n  public static get scrollRight(): boolean {\r\n    return this._scrollY === 1;\r\n  }\r\n\r\n  /**\r\n   * Used internally to initialise the mouse input.\r\n   * @param canvas The game's canvas.\r\n   */\r\n  public static _init(canvas: HTMLCanvasElement) {\r\n    canvas.addEventListener('mousemove', e => {\r\n      this._cursorX = e.clientX - canvas.offsetLeft;\r\n      this._cursorY = e.clientY - canvas.offsetTop;\r\n      this._movementX += e.movementX;\r\n      this._movementY += e.movementY;\r\n    });\r\n\r\n    canvas.addEventListener('mousedown', e => {\r\n      e.preventDefault();\r\n\r\n      switch (e.button) {\r\n        case 0:\r\n          this._leftButton = true;\r\n          this._leftClick = true;\r\n          break;\r\n        case 1:\r\n          this._middleButton = true;\r\n          this._middleClick = true;\r\n          break;\r\n        case 2:\r\n          this._rightButton = true;\r\n          this._rightClick = true;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      window.addEventListener('mouseup', e => {\r\n        if (!this._leftButton && !this._middleButton && !this._rightButton) return;\r\n\r\n        e.preventDefault();\r\n\r\n        switch (e.button) {\r\n          case 0:\r\n            this._leftButton = false;\r\n            break;\r\n          case 1:\r\n            this._middleButton = false;\r\n            break;\r\n          case 2:\r\n            this._rightButton = false;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      canvas.addEventListener('contextmenu', e => {\r\n        e.preventDefault();\r\n      });\r\n\r\n      window.addEventListener('wheel', e => {\r\n        e.preventDefault();\r\n\r\n        if (e.deltaX > 0) {\r\n          this._scrollX = 1;\r\n        } else if (e.deltaX < 0) {\r\n          this._scrollX = -1;\r\n        } else {\r\n          this._scrollX = 0;\r\n        }\r\n\r\n        if (e.deltaY > 0) {\r\n          this._scrollY = 1;\r\n        } else if (e.deltaY < 0) {\r\n          this._scrollY = -1;\r\n        } else {\r\n          this._scrollY = 0;\r\n        }\r\n      });\r\n\r\n      window.addEventListener('blur', () => {\r\n        this._leftButton = false;\r\n        this._middleButton = false;\r\n        this._rightButton = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Used internally to update the mouse input states.\r\n   */\r\n  public static _update(): void {\r\n    this._movementX = 0;\r\n    this._movementY = 0;\r\n    this._scrollX = 0;\r\n    this._scrollY = 0;\r\n    this._leftClick = false;\r\n    this._middleClick = false;\r\n    this._rightClick = false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mouse.ts","import {Map} from './Map';\r\nimport {Keys} from './Keys';\r\n\r\n/**\r\n * Map the keyboard and the state of each keys.\r\n */\r\nexport abstract class Keyboard {\r\n  /** Whether to prevent the default key action or not. Defaults to false. */\r\n  public static preventDefault: boolean;\r\n  private static _keys: Map<boolean>;\r\n  private static _pressed: Keys[];\r\n  private static _lastKey: Keys|null;\r\n\r\n  /**\r\n   * Check if a key is down.\r\n   * @param key The key to check.\r\n   */\r\n  public static keyDown(key: Keys): boolean {\r\n    return this._keys.get(key) || false;\r\n  }\r\n\r\n  /**\r\n   * Check if a key is pressed (fires only when the key is clicked).\r\n   * @param key The key to check.\r\n   */\r\n  public static keyPressed(key: Keys): boolean {\r\n    return this._pressed.indexOf(key) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Tast key that was pressed.<br>\r\n   * Can for example be used in a settings menu when asking the user the desired\r\n   * key-binding.<br>\r\n   * The value is reset to null or to the new last key each frame.\r\n   */\r\n  public static get lastKey(): Keys|null {\r\n    return this._lastKey;\r\n  }\r\n\r\n  /**\r\n   * Used internally to initialise the keyboard input.\r\n   */\r\n  public static _init() {\r\n    this.preventDefault = false;\r\n    this._keys = new Map<boolean>();\r\n    this._pressed = [];\r\n    this._lastKey = null;\r\n\r\n    window.addEventListener('keydown', e => {\r\n      if (this.preventDefault) e.preventDefault();\r\n\r\n      this._keys.set(e.code, true);\r\n      this._pressed.push(<Keys>e.code);\r\n      this._lastKey = <Keys>e.code;\r\n    });\r\n\r\n    window.addEventListener('keyup', e => {\r\n      if (this.preventDefault) e.preventDefault();\r\n\r\n      this._keys.set(e.code, false);\r\n    });\r\n\r\n    window.addEventListener('keypress', e => {\r\n      if (this.preventDefault) e.preventDefault();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Used internally to update the keyboard's keys state.\r\n   */\r\n  public static _update() {\r\n    this._pressed = [];\r\n    this._lastKey = null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Keyboard.ts","/**\r\n * This class represents the game's screen (canvas).<br>\r\n * It makes it easy to access the width, height and offsets properties of the\r\n * game's screen from anywhere in your game.\r\n */\r\nexport abstract class Screen {\r\n  private static _canvas: HTMLCanvasElement;\r\n\r\n  /**\r\n   * The width of the game's canvas.\r\n   */\r\n  public static get width(): number {\r\n    return this._canvas.width;\r\n  }\r\n\r\n  /**\r\n   * The height of the game's canvas.\r\n   */\r\n  public static get height(): number {\r\n    return this._canvas.height;\r\n  }\r\n\r\n  /**\r\n   * The offset width of the game's canvas.\r\n   */\r\n  public static get offsetWidth(): number {\r\n    return this._canvas.offsetWidth\r\n  }\r\n\r\n  /**\r\n   * The offset height of the game's canvas.\r\n   */\r\n  public static get offsetHeight(): number {\r\n    return this._canvas.offsetHeight;\r\n  }\r\n\r\n  /**\r\n   * The offset left of the game canvas.\r\n   */\r\n  public static get offsetX(): number {\r\n    return this._canvas.offsetLeft;\r\n  }\r\n\r\n  /**\r\n   * The offset top of the game canvas.\r\n   */\r\n  public static get offsetY(): number {\r\n    return this._canvas.offsetTop;\r\n  }\r\n\r\n  /**\r\n   * Used internally to initialise the Screen class.\r\n   * @param canvas The game's canvas.\r\n   */\r\n  public static _init(canvas: HTMLCanvasElement): void {\r\n    this._canvas = canvas;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Screen.ts","import {Map} from './Map';\r\nimport {Game} from './Game';\r\n\r\n/**\r\n * The loader is an easy way to preload all the required assets for your game.<br>\r\n * You can use it from the load() method of your Game class.<br>\r\n * It can also be used while the game is running to load assets on the fly.\r\n */\r\nexport abstract class Loader {\r\n  /** The base path to the assets directory. */\r\n  public static basePath: string = '.';\r\n  private static _game: Game;\r\n  private static _loaded: boolean = false;\r\n  private static _images: Map<HTMLImageElement> = new Map<HTMLImageElement>();\r\n  private static _videos: Map<HTMLVideoElement> = new Map<HTMLVideoElement>();\r\n  private static _audios: Map<HTMLAudioElement> = new Map<HTMLAudioElement>();\r\n  private static _json: Map<object> = new Map<object>();\r\n  private static _files: Map<boolean> = new Map<boolean>();\r\n\r\n  /**\r\n   * Used internally to preload the game and its assets.\r\n   * @param game The game instance.\r\n   */\r\n  public static _init(game: Game): void {\r\n    this._game = game;\r\n\r\n    this._game.load();\r\n\r\n    if (this._files.getAll().length === 0) {\r\n      this._fileLoaded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load an image file.<br>\r\n   * If the file can't be loaded, the game won't start and a message will\r\n   * be logged to the console.\r\n   * @param fileName The name to save this file as in the loader.\r\n   * @param filePath The path to the file to load.\r\n   */\r\n  public static loadImage(fileName: string, filePath: string): void {\r\n    const image = document.createElement('img');\r\n\r\n    filePath = `${this.basePath}/${filePath}`;\r\n\r\n    this._images.set(fileName, image);\r\n    this._files.set(fileName, false);\r\n\r\n    image.addEventListener('load', () => {\r\n      this._files.set(fileName, true);\r\n\r\n      if (!this._loaded) this._fileLoaded();\r\n    });\r\n\r\n    image.addEventListener('error', () => {\r\n      console.log(`Could not load file: ${filePath}.`);\r\n    });\r\n\r\n    image.src = filePath;\r\n  }\r\n\r\n  /**\r\n   * Load a video file.<br>\r\n   * If the file can't be loaded, the game won't start and a message will\r\n   * be logged to the console.\r\n   * @param fileName The name to save this file as in the loader.\r\n   * @param filePath The path to the file to load.\r\n   */\r\n  public static loadVideo(fileName: string, filePath: string): void {\r\n    const video = document.createElement('video');\r\n\r\n    filePath = `${this.basePath}/${filePath}`;\r\n\r\n    this._videos.set(fileName, video);\r\n    this._files.set(fileName, false);\r\n\r\n    video.addEventListener('loadeddata', () => {\r\n      this._files.set(fileName, true);\r\n\r\n      if (!this._loaded) this._fileLoaded();\r\n    });\r\n\r\n    video.addEventListener('error', () => {\r\n      console.log(`Could not load file: ${filePath}.`);\r\n    });\r\n\r\n    video.src = filePath;\r\n  }\r\n\r\n  /**\r\n   * Load an audio file.<br>\r\n   * If the file can't be loaded, the game won't start and a message will\r\n   * be logged to the console.\r\n   * @param fileName The name to save this file as in the loader.\r\n   * @param filePath The path to the file to load.\r\n   */\r\n  public static loadAudio(fileName: string, filePath: string): void {\r\n    const audio = document.createElement('audio');\r\n\r\n    filePath = `${this.basePath}/${filePath}`;\r\n\r\n    this._audios.set(fileName, audio);\r\n    this._files.set(fileName, false);\r\n\r\n    audio.addEventListener('loadeddata', () => {\r\n      this._files.set(fileName, true);\r\n\r\n      if (!this._loaded) this._fileLoaded();\r\n    });\r\n\r\n    audio.addEventListener('error', () => {\r\n      console.log(`Could not load file: ${filePath}.`);\r\n    });\r\n\r\n    audio.src = filePath;\r\n  }\r\n\r\n  /**\r\n   * Load a json file.<br>\r\n   * If the file can't be loaded, the game won't start and a message will\r\n   * be logged to the console.\r\n   * @param fileName The name to save this file as in the loader.\r\n   * @param filePath The path to the file to load.\r\n   */\r\n  public static loadJSON(fileName: string, filePath: string): void {\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    filePath = `${this.basePath}/${filePath}`;\r\n\r\n    this._json.set(fileName, {});\r\n    this._files.set(fileName, false);\r\n\r\n    xhr.addEventListener('load', () => {\r\n      this._files.set(fileName, true);\r\n      this._json.set(fileName, JSON.parse(xhr.responseText));\r\n\r\n      if (!this._loaded) this._fileLoaded();\r\n    });\r\n\r\n    xhr.addEventListener('error', () => {\r\n      console.log(`Could not load file: ${filePath}`);\r\n    });\r\n\r\n    xhr.open('GET', filePath, true);\r\n    xhr.send();\r\n  }\r\n\r\n  /**\r\n   * Get a file from the loader.<br>\r\n   * If the file was loaded on the fly, it may not be ready yet! You can\r\n   * check whether the file was loaded or not using the loaded() method.\r\n   * @param fileName The name of the file to get.\r\n   * @return The file, or null if the Loader does not contain the specified file.\r\n   */\r\n  public static get(fileName: string): HTMLImageElement|HTMLAudioElement|HTMLVideoElement|object|null {\r\n    if (this._images.get(fileName) !== null) {\r\n      return this.image(fileName);\r\n    } else if (this._videos.get(fileName) !== null) {\r\n      return this.video(fileName);\r\n    } else if (this._audios.get(fileName) !== null) {\r\n      return this.audio(fileName);\r\n    } else if (this._json.get(fileName) !== null) {\r\n      return this.json(fileName);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an image that was loaded.<br>\r\n   * If the image was loaded on the fly, it may not be ready yet! You can\r\n   * check whether the file was loaded or not using the loaded() method.\r\n   * @param fileName The name of the file to get.\r\n   * @return The image file, or null if the image was not loaded using loadImage().\r\n   */\r\n  public static image(fileName: string): HTMLImageElement|null {\r\n    return this._images.get(fileName);\r\n  }\r\n\r\n  /**\r\n   * Get a video that was loaded.<br>\r\n   * If the video was loaded on the fly, it may not be ready yet! You can\r\n   * check whether the file was loaded or not using the loaded() method.\r\n   * @param fileName The name of the file to get.\r\n   * @return The video file, or null if the video was not loaded using loadVideo().\r\n   */\r\n  public static video(fileName: string): HTMLVideoElement|null {\r\n    return this._videos.get(fileName);\r\n  }\r\n\r\n  /**\r\n   * Get a audio that was loaded.<br>\r\n   * If the audio was loaded on the fly, it may not be ready yet! You can\r\n   * check whether the file was loaded or not using the loaded() method.\r\n   * @param fileName The name of the file to get.\r\n   * @return The audio file, or null if the audio was not loaded using loadAudio().\r\n   */\r\n  public static audio(fileName: string): HTMLAudioElement|null {\r\n    return this._audios.get(fileName);\r\n  }\r\n\r\n  /**\r\n   * Get a JSON file that was loaded.<br>\r\n   * If the JSON file was loaded on the fly, it may not be ready yet! You can\r\n   * check whether the file was loaded or not using the loaded() method.\r\n   * @param fileName The name of the file to get.\r\n   * @return The parsed JSON file, or null if the JSON file was not loaded using loadJSON().\r\n   */\r\n  public static json(fileName: string): object|null {\r\n    return this._json.get(fileName);\r\n  }\r\n\r\n  /**\r\n   * Check whether a file is ready to be used or not.\r\n   * @param fileName The file to check.\r\n   */\r\n  public static loaded(fileName: string): boolean {\r\n    return this._files.get(fileName) || false;\r\n  }\r\n\r\n  private static _fileLoaded(): void {\r\n    if (this._files.getAll().indexOf(false) === -1) {\r\n      this._loaded = true;\r\n      this._game._start();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Loader.ts","import {Map} from './Map';\r\n\r\n/**\r\n * The State class is used to store data that can be accessed throughout your game.<br>\r\n * For example, you can use it from a game object to update a state value, then\r\n * access this state value from the game's update method or from another game object.<br>\r\n * Think of it as a big container available from anywhere you import it.\r\n */\r\nexport abstract class State {\r\n  private static _states: Map<any>;\r\n\r\n  /**\r\n   * Used internally to initialise the State class.\r\n   */\r\n  public static _init() {\r\n    this._states = new Map<any>();\r\n  }\r\n\r\n  /**\r\n   * Set (create or update) a state value.\r\n   * @param key The name of the state.\r\n   * @param value The value of the state.\r\n   */\r\n  public static set(key: string, value: any): void {\r\n    this._states.set(key, value);\r\n  }\r\n\r\n  /**\r\n   * Get a state value.\r\n   * @param key The name of the state.\r\n   * @return The value of the state, null if the state was not set.\r\n   */\r\n  public static get(key: string): any {\r\n    return this._states.get(key);\r\n  }\r\n\r\n  /**\r\n   * Increment a state. If the state is not a number, nothing happens.\r\n   * @param key The key of a numeric state.\r\n   */\r\n  public static inc(key: string): void {\r\n    if (typeof this._states.get(key) === 'number') {\r\n      this._states.set(key, this._states.get(key) + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decrement a state. If the state is not a number, nothing happens.\r\n   * @param key The key of a numeric state.\r\n   */\r\n  public static dec(key: string): void {\r\n    if (typeof this._states.get(key) === 'number') {\r\n      this._states.set(key, this._states.get(key) - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reverse a state value. If the state is not a boolean, nothing happens.\r\n   * @param key The key of a boolean state.\r\n   */\r\n  public static reverse(key: string): void {\r\n    if (typeof this._states.get(key) === 'boolean') {\r\n      this._states.set(key, !this._states.get(key));\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/State.ts","/**\r\n * Store time values and make them easy to access from anywhere\r\n * in your game just by importing this static class.\r\n */\r\nexport abstract class Time {\r\n  private static _deltaTime: number = 0;\r\n  private static _time: number = 0;\r\n\r\n  /**\r\n   * Used internally to update the time data.\r\n   * @param frame The total time elapsed in milliseconds, passed in by the browser.\r\n   */\r\n  public static _setFrame(frame: number): void {\r\n    this._deltaTime = frame - this._time;\r\n    this._time = frame;\r\n  }\r\n\r\n  /**\r\n   * The time elapsed since the last frame, in milliseconds.<br>\r\n   */\r\n  public static get deltaTime(): number {\r\n    return this._deltaTime;\r\n  }\r\n\r\n  /**\r\n   * The time elapsed since the game has started being rendered, in milliseconds.\r\n   */\r\n  public static get time(): number {\r\n    return this._time;\r\n  }\r\n\r\n  /**\r\n   * The deltaTime in second. Useful for animations.<br>\r\n   * Let's say we want our gameObject.x property to move +10 pixels per second, we can do that:\r\n   * gameObject.x += 10 * Time.second;\r\n   */\r\n  public static get second(): number {\r\n    return 1 / this._deltaTime;\r\n  }\r\n\r\n  /**\r\n   * The average amount of frames per second based on the current deltaTime.\r\n   */\r\n  public static get FPS(): number {\r\n    return 1000 / this._deltaTime;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Time.ts","/**\r\n * A Canvas' 2D rendering context that is not rendered.<br>\r\n * Useful to work with ImageData objects, TextMetrics, to create bitmap data and\r\n * anything else you can do with a 2D context.\r\n */\r\nexport abstract class VirtualContext {\r\n  private static _context: CanvasRenderingContext2D;\r\n  private static _width: number;\r\n  private static _height: number;\r\n\r\n  /**\r\n   * Used internally to initialise the virual context.\r\n   */\r\n  public static _init(): void {\r\n    this._context = <CanvasRenderingContext2D>document.createElement('canvas').getContext('2d');\r\n    this._width = 0;\r\n    this._height = 0;\r\n  }\r\n\r\n  /**\r\n   * Request the virtual context.\r\n   * @param width The width to request from the context.\r\n   * @param height The height to request from the context.\r\n   * @return The context object.\r\n   */\r\n  public static requestBuffer(width: number, height: number): CanvasRenderingContext2D {\r\n    this._context.restore();\r\n    this._context.clearRect(0, 0, this._width, this._height);\r\n    this._context.save();\r\n\r\n    this._width = width;\r\n    this._height = height;\r\n\r\n    return this._context;\r\n  }\r\n\r\n  /**\r\n   * Get the image data from an image object.\r\n   * @param image The image to get the data from.\r\n   * @param width The width of the image (defaults to the actual image's width).\r\n   * @param height The height of the image (defaults to the actual image's height).\r\n   */\r\n  public static getImageData(image: HTMLImageElement, width?: number, height?: number): ImageData {\r\n    width = width !== undefined ? width : image.width;\r\n    height = height !== undefined ? height : image.height;\r\n\r\n    const context = this.requestBuffer(width, height);\r\n\r\n    context.drawImage(image, 0, 0, width, height);\r\n\r\n    return context.getImageData(0, 0, width, height);\r\n  }\r\n\r\n  /**\r\n   * Get the width of a text with a specified font.\r\n   * @param text The text to measure.\r\n   * @param font The font to use.\r\n   */\r\n  public static measureText(text: string, font: string): number {\r\n    this._context.save();\r\n\r\n    this._context.font = font;\r\n    const textMeasure = this._context.measureText(text);\r\n\r\n    this._context.restore();\r\n\r\n    return textMeasure.width;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/VirtualContext.ts","export * from './Game';\r\nexport * from './GameObject';\r\nexport * from './IRenderable';\r\nexport * from './IUpdatable';\r\nexport * from './Keyboard';\r\nexport * from './Keys';\r\nexport * from './Loader';\r\nexport * from './Map';\r\nexport * from './Mouse';\r\nexport * from './Renderer';\r\nexport * from './Scene';\r\nexport * from './Screen';\r\nexport * from './State';\r\nexport * from './Time';\r\nexport * from './VirtualContext';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import {Renderer} from './Renderer';\r\nimport {Scene} from './Scene';\r\nimport {IUpdatable} from './IUpdatable';\r\nimport {Mouse} from './Mouse';\r\nimport {Keyboard} from './Keyboard';\r\nimport {Screen} from './Screen';\r\nimport {Loader} from './Loader';\r\nimport {State} from './State';\r\nimport {Time} from './Time';\r\nimport {VirtualContext} from './VirtualContext';\r\n\r\n/**\r\n * The base class of any game.\r\n */\r\nexport class Game implements IUpdatable {\r\n  private _container: HTMLElement;\r\n  private _canvas: HTMLCanvasElement;\r\n  private _running: boolean;\r\n  private _renderer: Renderer;\r\n  private _scene: Scene;\r\n  private _framerate: number;\r\n  private _frameID: number;\r\n  private _startTime: number;\r\n  private _now: () => number;\r\n  private _loopEngine: 0|1;\r\n\r\n  /**\r\n   * Create a Game.\r\n   * @param width The width of the game.\r\n   * @param height The height of the game.\r\n   * @param container The HTML parent element for the game's canvas.\r\n   */\r\n  constructor(width: number, height: number, container: HTMLElement) {\r\n    this._container = container;\r\n    this._scene = new Scene();\r\n    this._scene.game = this;\r\n    this._canvas = document.createElement('canvas');\r\n    this._renderer = new Renderer(<CanvasRenderingContext2D>this._canvas.getContext('2d'));\r\n    this._running = false;\r\n    this._framerate = 60;\r\n    this._frameID = 0;\r\n    this._startTime = 0;\r\n    this._loopEngine = 0;\r\n    \r\n    if (window.performance !== undefined) {\r\n      if (performance.now !== undefined) {\r\n        this._now = () => {\r\n          return performance.now();\r\n        }\r\n      } else {\r\n        this._now = () => {\r\n          return Date.now();\r\n        }\r\n      }\r\n    } else {\r\n      this._now = () => {\r\n        return Date.now();\r\n      }\r\n    }\r\n\r\n    this._canvas.width = width;\r\n    this._canvas.height = height;\r\n    this._container.appendChild(this._canvas);\r\n\r\n    VirtualContext._init();\r\n    Screen._init(this._canvas);\r\n    Mouse._init(this._canvas);\r\n    Keyboard._init();\r\n    State._init();\r\n    Loader._init(this);\r\n  }\r\n\r\n  /**\r\n   * The width of the game's canvas.\r\n   */\r\n  public get width(): number {\r\n    return this._canvas.width;\r\n  }\r\n\r\n  public set width(width: number) {\r\n    this._canvas.width = width;\r\n  }\r\n\r\n  /**\r\n   * The height of the game's canvas.\r\n   */\r\n  public get height(): number {\r\n    return this._canvas.height;\r\n  }\r\n\r\n  public set height(height: number) {\r\n    this._canvas.height = height;\r\n  }\r\n\r\n  /**\r\n   * The HTML element that contains the game's canvas.\r\n   */\r\n  public get container(): HTMLElement {\r\n    return this._container;\r\n  }\r\n\r\n  /**\r\n   * The game's canvas object.\r\n   */\r\n  public get canvas(): HTMLCanvasElement {\r\n    return this._canvas;\r\n  }\r\n\r\n  /**\r\n   * Whether the game is running or not.\r\n   */\r\n  public get running(): boolean {\r\n    return this._running;\r\n  }\r\n\r\n  /**\r\n   * The game's renderer.\r\n   */\r\n  public get renderer(): Renderer {\r\n    return this._renderer;\r\n  }\r\n\r\n  /**\r\n   * The game's current scene.\r\n   */\r\n  public get scene(): Scene {\r\n    return this._scene;\r\n  }\r\n\r\n  public set scene(scene: Scene) {\r\n    scene.game = this;\r\n    this._scene = scene;\r\n  }\r\n\r\n  /**\r\n   * The framerate of the game.<br>\r\n   * If you need the actual FPS the game is rendering, refer to Time#FPS.\r\n   */\r\n  public get framerate(): number {\r\n    return this._framerate;\r\n  }\r\n\r\n  /**\r\n   * Set a new framerate for the game.<br>\r\n   * Set to 0 to uncap the framerate (some chromium based browsers will cap it at 250fps).\r\n   * @param framerate The new framerate to use.\r\n   */\r\n  public setFramerate(framerate: number): void {\r\n    if (this._framerate === framerate) return;\r\n\r\n    if (this._loopEngine === 0) {\r\n      cancelAnimationFrame(this._frameID);\r\n    } else {\r\n      clearInterval(this._frameID);\r\n    }\r\n\r\n    this._framerate = framerate;\r\n    this._startLoop();\r\n  }\r\n\r\n  /**\r\n   * Called when the game is launched.<br>\r\n   * Useful for assets loading.\r\n   */\r\n  public load(): void {\r\n  }\r\n\r\n  /**\r\n   * Called when the game is ready to run, just before it starts.<br>\r\n   * You can set a scene and access the loaded assets safely from here.\r\n   */\r\n  public create(): void {\r\n  }\r\n\r\n  /**\r\n   * Called before rendering a frame.<br>\r\n   * You can specify things to run every frame as long as your game is running.\r\n   */\r\n  public update(): void {\r\n  }\r\n\r\n  /**\r\n   * Used internally to start the game.\r\n   */\r\n  public _start(): void {\r\n    if (this._running) return;\r\n\r\n    this._running = true;\r\n    this.create();\r\n\r\n    window.focus();\r\n\r\n    this._startTime = this._now();\r\n\r\n    this._startLoop();\r\n  }\r\n\r\n  private _startLoop(): void {\r\n    if (this.framerate === 60) {\r\n      this._loopEngine = 0;\r\n      this._loop();\r\n    } else {\r\n      this._loopEngine = 1;\r\n      this._frameID = <any>setInterval(() => {\r\n        this._loop();\r\n      }, 1000 / this.framerate);\r\n    }\r\n  }\r\n\r\n  private _loop(): void {\r\n    // Request update if needed\r\n    if (this._loopEngine === 0) {\r\n      this._frameID = requestAnimationFrame((frame) => {\r\n        Time._setFrame(frame);\r\n        this._loop();\r\n      });\r\n    } else {\r\n      Time._setFrame(this._getNewTime());\r\n    }\r\n\r\n    // Update game, scene, game objects\r\n    this.update();\r\n    this._scene.update();\r\n\r\n    for (const gameObject of this._scene.getAll()) {\r\n      gameObject.update();\r\n    }\r\n\r\n    // Render scene\r\n    this._renderer.render(this._scene);\r\n\r\n    // Update input states\r\n    Mouse._update();\r\n    Keyboard._update();\r\n  }\r\n\r\n  private _getNewTime(): number {\r\n    return this._now() - this._startTime;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game.ts","import {IUpdatable} from './IUpdatable';\r\nimport {IRenderable} from './IRenderable';\r\nimport {Scene} from './Scene';\r\nimport {Game} from './Game';\r\n\r\n/**\r\n * A game object defines an entity in your game's world.<br>\r\n * It can be for example the player's character, a button, etc.\r\n */\r\nexport class GameObject implements IUpdatable, IRenderable {\r\n  /** The current or last scene this game object's instance belonged to. */\r\n  public scene: Scene;\r\n\r\n  constructor() {\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * A reference to your main Game instance.\r\n   */\r\n  public get game(): Game {\r\n    return this.scene.game;\r\n  }\r\n\r\n  /**\r\n   * Called when the game object is created.<br>\r\n   * You can set the game object's properties in here, use the loader\r\n   * to load textures, etc...\r\n   */\r\n  public create(): void {\r\n  }\r\n\r\n  /**\r\n   * Called every frame as long as the game object is in the active scene.<br>\r\n   * You can update your object property from here to, for example, move a\r\n   * character if a keyboard key is being pressed.\r\n   */\r\n  public update(): void {\r\n  }\r\n\r\n  /**\r\n   * Called every frame as long as the game object is in the active scene.<br>\r\n   * Render the game object to the screen using the renderer's 2D context.\r\n   * @param context The renderer's context, automatically passed in.\r\n   */\r\n  public render(context: CanvasRenderingContext2D): void {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/GameObject.ts","/**\r\n * Define all the keys available from the Keyboard class.\r\n */\r\nexport enum Keys {\r\n  Digit0 = 'Digit0',\r\n  Digit1 = 'Digit1',\r\n  Digit2 = 'Digit2',\r\n  Digit3 = 'Digit3',\r\n  Digit4 = 'Digit4',\r\n  Digit5 = 'Digit5',\r\n  Digit6 = 'Digit6',\r\n  Digit7 = 'Digit7',\r\n  Digit8 = 'Digit8',\r\n  Digit9 = 'Digit9',\r\n\r\n  KeyA = 'KeyA',\r\n  KeyB = 'KeyB',\r\n  KeyC = 'KeyC',\r\n  KeyD = 'KeyD',\r\n  KeyE = 'KeyE',\r\n  KeyF = 'KeyF',\r\n  KeyG = 'KeyG',\r\n  KeyH = 'KeyH',\r\n  KeyI = 'KeyI',\r\n  KeyJ = 'KeyJ',\r\n  KeyK = 'KeyK',\r\n  KeyL = 'KeyL',\r\n  KeyM = 'KeyM',\r\n  KeyN = 'KeyN',\r\n  KeyO = 'KeyO',\r\n  KeyP = 'KeyP',\r\n  KeyQ = 'KeyQ',\r\n  KeyR = 'KeyR',\r\n  KeyS = 'KeyS',\r\n  KeyT = 'KeyT',\r\n  KeyU = 'KeyU',\r\n  KeyV = 'KeyV',\r\n  KeyW = 'KeyW',\r\n  KeyX = 'KeyX',\r\n  KeyY = 'KeyY',\r\n  KeyZ = 'KeyZ',\r\n\r\n  Escape = 'Escape',\r\n\r\n  F1 = 'F1',\r\n  F2 = 'F2',\r\n  F3 = 'F3',\r\n  F4 = 'F4',\r\n  F5 = 'F5',\r\n  F6 = 'F6',\r\n  F7 = 'F7',\r\n  F8 = 'F8',\r\n  F9 = 'F9',\r\n  F10 = 'F10',\r\n  F11 = 'F11',\r\n  F12 = 'F12',\r\n\r\n  Insert = 'Insert',\r\n  Delete = 'Delete',\r\n\r\n  Home = 'Home',\r\n  End = 'End',\r\n  PageUp = 'PageUp',\r\n  PageDown = 'PageDown',\r\n\r\n  NumLock = 'NumLock',\r\n  NumpadDivide = 'NumpadDivide',\r\n  NumpadMultiply = 'NumpadMultiply',\r\n  NumpadSubtract = 'NumpadSubtract',\r\n  NumpadAdd = 'NumpadAdd',\r\n  NumpadEnter = 'NumpadEnter',\r\n  NumpadDecimal = 'NumpadDecimal',\r\n  Numpad0 = 'Numpad0',\r\n  Numpad1 = 'Numpad1',\r\n  Numpad2 = 'Numpad2',\r\n  Numpad3 = 'Numpad3',\r\n  Numpad4 = 'Numpad4',\r\n  Numpad5 = 'Numpad5',\r\n  Numpad6 = 'Numpad6',\r\n  Numpad7 = 'Numpad7',\r\n  Numpad8 = 'Numpad8',\r\n  Numpad9 = 'Numpad9',\r\n\r\n  ArrowUp = 'ArrowUp',\r\n  ArrowDown = 'ArrowDown',\r\n  ArrowLeft = 'ArrowLeft',\r\n  ArrowRight = 'ArrowRight',\r\n\r\n  Backquote = 'Backquote',\r\n  Minus = 'Minus',\r\n  Equal = 'Equal',\r\n  Backspace = 'Backspace',\r\n  BracketLeft = 'BracketLeft',\r\n  BracketRight = 'BracketRight',\r\n  Quote = 'Quote',\r\n  Backslash = 'Backslash',\r\n  Comma = 'Comma',\r\n  Period = 'Period',\r\n  Slash = 'Slash',\r\n\r\n  Enter = 'Enter',\r\n  ShiftLeft = 'ShiftLeft',\r\n  ShiftRight = 'ShiftRight',\r\n  CapsLock = 'CapsLock',\r\n  Tab = 'Tab',\r\n  ControlLeft = 'ControlLeft',\r\n  ControlRight = 'ControlRight',\r\n  MetaLeft = 'MetaLeft',\r\n  MetaRight = 'MetaRight',\r\n  AltLeft = 'AltLeft',\r\n  AltRight = 'AltRight'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Keys.ts"],"sourceRoot":""}