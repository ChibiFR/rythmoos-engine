{"version":3,"sources":["webpack:///webpack/bootstrap c1c6715a25d8a596d5eb","webpack:///./src/index.js","webpack:///./src/MainScene.js","webpack:///./src/Circle.js","webpack:///./src/FPSCounter.js","webpack:///./src/Score.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DoB;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;AChByC;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;AC1EyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,sEAAqB;AAClD;;AAEA;AAAA;AAAA;;;;;;;;;;ACjBkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,oEAAmB;AAClD;;AAEA;AAAA;AAAA","file":"my-awesome-game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c1c6715a25d8a596d5eb","import {Game, State} from 'rythmoos-engine';\r\nimport MainScene from './MainScene';\r\n\r\n// Our main game class\r\nclass MyAwesomeGame extends Game {\r\n\r\n  // Override the create method, this is when the game is ready to start\r\n  create() {\r\n    // We can already initialise the score state so it is available from anywhere we need it\r\n    State.set('score', 0);\r\n\r\n    // Let's set the initial game scene here\r\n    this.scene = new MainScene();\r\n  }\r\n\r\n}\r\n\r\n// Start our game when the window loads\r\nwindow.onload = () => {\r\n  new MyAwesomeGame(window.innerWidth, window.innerHeight, document.body);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","import {Scene} from 'rythmoos-engine';\r\nimport Circle from './Circle';\r\nimport Score from './Score';\r\nimport FPSCounter from './FPSCounter';\r\n\r\n// Our main scene\r\nexport default class MainScene extends Scene {\r\n\r\n  // Override the create method so we can setup the scene\r\n  create() {\r\n    // Let's add our game objects\r\n    this.set('circle', new Circle());\r\n    this.set('score', new Score());\r\n    this.set('fps counter', new FPSCounter());\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/MainScene.js\n// module id = 15\n// module chunks = 0","import {GameObject, Screen, Mouse, State} from 'rythmoos-engine';\r\n\r\n// Our circle game object\r\nexport default class Circle extends GameObject {\r\n\r\n  // Override the create method\r\n  create() {\r\n    // Let's set up our game object properties here\r\n\r\n    // The radius of our circle\r\n    this.radius = 50;\r\n\r\n    // The x and y coordinates\r\n    this.x = this.getNewPosition(Screen.width);\r\n    this.y = this.getNewPosition(Screen.height);\r\n\r\n    // Let's set a boolean value that checks whether the mouse is hovering the circle or not.\r\n    this.hovered = false;\r\n\r\n    // The colour of our circle (let's make it white when hovered)\r\n    this.colour = '#ff00ff';\r\n  }\r\n\r\n  // Override the update method\r\n  update() {\r\n    // This method is ran each frame, before the rendering process.\r\n    // Let's update our game object properties from here:\r\n\r\n    // If the circle is hovered, let's set its colour to white, or set it to\r\n    // #ff00ff otherwise.\r\n    this.colour = this.hovered ? '#ffffff' : '#ff00ff';\r\n\r\n    // If the mouse left button is clicked\r\n    if (Mouse.leftClick) {\r\n      // Let's be mean here and remove 1 point from the player's score if he clicks outside\r\n      // of the circle.\r\n      if (this.hovered === false) {\r\n        State.set('score', State.get('score') - 1);\r\n      } else {\r\n        // Otherwise, we'll add 1 to the score\r\n        State.set('score', State.get('score') + 1);\r\n      }\r\n\r\n      // Set new positions to our circle when a click occurs\r\n      this.x = this.getNewPosition(Screen.width);\r\n      this.y  =this.getNewPosition(Screen.height);\r\n    }\r\n  }\r\n\r\n  // Override the render method\r\n  render(context) {\r\n    // We will render our object form here.\r\n    context.fillStyle = this.colour;\r\n\r\n    // Draw the circle\r\n    context.beginPath();\r\n    context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    context.fill();\r\n\r\n    // Since we drew our circle's path, we can use the context isPointInPath method to check\r\n    // whether the cursor is in the path or not.\r\n    this.hovered = context.isPointInPath(Mouse.cursorX, Mouse.cursorY);\r\n  }\r\n\r\n  /**\r\n   * Simple custom method to set our game object's x and y coordinates\r\n   * @param {number} max The max possible value\r\n   * @return A random x\r\n   */\r\n  getNewPosition(max) {\r\n    // Some very complex mathemical stuff\r\n    return Math.random() * (max - this.radius * 2) + this.radius;\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Circle.js\n// module id = 16\n// module chunks = 0","import {GameObject, Time} from 'rythmoos-engine';\r\n\r\n// Our FPS counter\r\nexport default class FPSCounter extends GameObject {\r\n\r\n  // We'll simply override the render method here\r\n  render(context) {\r\n    context.fillStyle = '#ffffff';\r\n    context.font = '20px Arial';\r\n\r\n    // That will allow us to position the text from its top left corner\r\n    context.textAlign = 'left';\r\n    context.textBaseline = 'top';\r\n    \r\n    context.fillText(`FPS: ${Math.round(Time.FPS)}`, 15, 15);\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/FPSCounter.js\n// module id = 17\n// module chunks = 0","import {GameObject, State, Screen} from 'rythmoos-engine';\r\n\r\n// Our score class\r\nexport default class Score extends GameObject {\r\n\r\n  // Override the create method to set our properties\r\n  create() {\r\n    this.x = Screen.width - 30;\r\n    this.y = Screen.height - 30;\r\n  }\r\n\r\n  // Override the render method to render our score text\r\n  render(context) {\r\n    context.fillStyle = '#ffffff';\r\n    context.font = '36px Arial';\r\n\r\n    // That will allow us to position the text from its bottom right corner\r\n    context.textAlign = 'right';\r\n    context.textBaseline = 'bottom';\r\n    \r\n    context.fillText(`Score: ${State.get('score')}`, this.x, this.y);\r\n  }\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Score.js\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}